# RELEASE 0 #

# Write a method that takes an array of integers and an integer to search for. The method should return the index of the item, or nil if the integer is not present in the array. Don't use built-in array methods like .index. You are allowed to use .length and .each.

# ........................................................ #

def search_array(array, num)
  index = nil
  array.length.times do |i|
    if array[i] == num
      index = i
    end
  end
  p index
end

# ........................................................ #

# RELEASE 0 #

# Add a method to your file that takes a number of Fibonacci terms to generate and returns an array of the terms. For example, fib(6) would return [0,1,1,2,3,5]. Your method should work for a large number of terms. To verify your work: the last number in the array generated by fib(100) will be 218922995834555169026

def fib(n)
  arr = [0, 1]
  (n-2).times.each_with_object(arr) { |num, obj| obj << obj[-2] + obj[-1] }
end

fib(6)

fib(100)[-1] == 218922995834555169026